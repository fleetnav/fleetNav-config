server:
  port: 8082
  servlet:
    context-path: /api/v1

hibernate:
  connection:
    url: jdbc:postgresql://localhost:5433/fleetNav
    username: postgres
    password: postgres
    driver_class: org.postgresql.Driver
    ddl-auto: true
  show_sql: true
  
spring:
  datasource:
    url: ${hibernate.connection.url}
    username: ${hibernate.connection.username}
    password: ${hibernate.connection.password}
    driverClassName: ${hibernate.connection.driver_class}
  jpa:
    show-sql: ${hibernate.show_sql}
    generate-ddl: false
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        dialect: ${hibernate.dialect}
        ddl-auto: ${hibernate.ddl-auto}
        show_sql: ${hibernate.show_sql}
        multiTenancy: SCHEMA
        tenant_identifier_resolver: com.fleetNavmultitenantservice.config.hibernate.TenantIdentifierResolver
        multi_tenant_connection_provider: com.fleetNavmultitenantservice.config.hibernate.SchemaMultiTenantConnectionProvider

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
    enpoints:
      web:
        exposure:
          include: health

    enpoint:
      health:
        show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

    retry:
      instances:
        ratingHotelService:
          max-attemps: 3
          wait-duration: 5s
  
